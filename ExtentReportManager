package utils;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;

public class ExtentReportManager {
    private static ExtentReports extent;
    private static ExtentTest scenario;
    private static ExtentTest features;

    public static ExtentReports getInstance() {
        if (extent == null) {
            String reportName = "Test-Execution-Report.html";
            ExtentHtmlReporter htmlReporter = new ExtentHtmlReporter(System.getProperty("user.dir") + "/test-output/" + reportName);

            extent = new ExtentReports();
            extent.attachReporter(htmlReporter);

            return extent;
        }
        return extent;
    }

    public static ExtentTest createScenario(String scenarioName) {
        scenario = getInstance().createTest(scenarioName);
        return scenario;
    }
====================================================
package runners;

import io.cucumber.junit.Cucumber;
import io.cucumber.junit.CucumberOptions;
import io.cucumber.testng.AbstractTestNGCucumberTests;
import org.junit.runner.RunWith;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import utils.ExtentReportManager;

@RunWith(Cucumber.class)
@CucumberOptions(
        features = "src/test/resources/features",
        glue = "stepDefinitions",
        plugin = {"pretty", "html:test-output"}
)
public class TestRunner extends AbstractTestNGCucumberTests {

    @BeforeClass
    public static void setup() {
        ExtentReportManager.getInstance();
    }

    @AfterClass
    public static void teardown() {
        ExtentReportManager.getInstance().flush();
    }
}


    public static ExtentTest createFeature(String featureName) {
        features = getInstance().createTest(featureName);
        return features;
    }
}
===============================================
package steps;

import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import utils.ExtentReportManager;

public class YourStepDefinitions {

    @Given("some precondition")
    public void some_precondition() {
        ExtentReportManager.createScenario("Some Precondition");
        // Your test logic...
    }

    @When("some action is performed")
    public void some_action_is_performed() {
        ExtentReportManager.createScenario("Some Action");
        // Your test logic...
    }

    @Then("some verification")
    public void some_verification() {
        ExtentReportManager.createScenario("Some Verification");
        // Your test logic...
    }
}

